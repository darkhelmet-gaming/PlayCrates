import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "xyz.jpenilla.run-paper" version "1.0.6"
    id "com.github.ben-manes.versions" version "0.42.0"
}

apply plugin: 'java'
apply plugin: 'checkstyle'

processResources {
    filter ReplaceTokens, tokens: [
        "apiversion": project.property("apiversion"),
        "version"   : project.property("version")
    ]
}

repositories {
    mavenLocal()
    mavenCentral()

    // Aikar
    maven { url = 'https://repo.aikar.co/content/groups/aikar/' }

    // Spigot
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }

    // CodeMC (nbt-api)
    maven { url = 'https://repo.codemc.org/repository/maven-public/' }

    // Sonatype (kyori)
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots/' }

    // TeamTriumph
    maven { url = 'https://repo.triumphteam.dev/snapshots' }

    // DecentHolograms
    maven { url 'https://jitpack.io' }
}

group = project.property("group")
version = project.property("version")
targetCompatibility = sourceCompatibility = JavaVersion.VERSION_17

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.18-R0.1-SNAPSHOT'
    compileOnly 'org.apache.logging.log4j:log4j-api:2.17.2'
    compileOnly 'com.github.decentsoftware-eu:decentholograms:2.4.2'
    compileOnly fileTree('../lib')
    implementation 'com.google.inject:guice:5.1.0'
    implementation 'net.kyori:adventure-api:4.11.0'
    implementation 'net.kyori:adventure-serializer-configurate4:4.11.0'
    implementation 'net.kyori:adventure-platform-bukkit:4.1.1'
    implementation 'net.kyori:adventure-text-serializer-plain:4.11.0'
    implementation 'net.kyori:adventure-text-minimessage:4.11.0'
    implementation 'net.kyori.moonshine:moonshine-core:2.0.4'
    implementation 'net.kyori.moonshine:moonshine-standard:2.0.4'
    implementation 'org.spongepowered:configurate-hocon:4.1.2'
    implementation 'dev.triumphteam:triumph-cmd-bukkit:2.0.0-SNAPSHOT'
    implementation 'dev.triumphteam:triumph-gui:3.1.2'
    implementation 'de.tr7zw:item-nbt-api-plugin:2.10.0'
    implementation project(':playcrates-api')
}

compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}

jar {
    actions = []
    dependsOn = []
    dependsOn('shadowJar')
}

shadowJar {
    relocate 'com.google', 'network.darkhelmet.playcrates.google'
    relocate 'net.kyori', 'network.darkhelmet.playcrates.kyori'
    relocate 'org.spongepowered', 'network.darkhelmet.playcrates.spongepowered'
    relocate 'de.tr7zw', 'network.darkhelmet.playcrates.tr7zw'
    relocate 'dev.triumphteam.cmd', 'network.darkhelmet.playcrates.cmd'
    relocate 'dev.triumphteam.gui', 'network.darkhelmet.playcrates.gui'

    // Relocate transitive deps for now
    relocate 'javax', 'network.darkhelmet.playcrates.javax'
    relocate 'com.typesafe', 'network.darkhelmet.playcrates.typesafe'
    relocate 'io.leangen', 'network.darkhelmet.playcrates.leangen'
    relocate 'org.aopalliance', 'network.darkhelmet.playcrates.aopalliance'
    relocate 'oorg.checkerframework', 'network.darkhelmet.playcrates.checkerframework'

    minimize()
}

runServer {
    // Configure the Minecraft version for our task.
    // This is the only required configuration besides applying the plugin.
    // Your plugin's jar (or shadowJar if present) will be used automatically.
    minecraftVersion("1.18.2")
}